#include <opencog/comboreduct/combo/vertex.h>
#include <opencog/comboreduct/combo/iostream_combo.h>

using namespace opencog::combo;
using namespace std;

class vertexUTest :  public CxxTest::TestSuite {
public:
    void test_is_idx_valid1() {
        {
            argument arg(4);
            arity_t arity = 0;
            TS_ASSERT(!arg.is_idx_valid(arity));
        }
        {
            argument arg(2);
            arity_t arity = 3;
            TS_ASSERT(arg.is_idx_valid(arity));
        }
        {
            argument arg(1);
            arity_t arity = -2;
            TS_ASSERT(arg.is_idx_valid(arity));
        }
        {
            argument arg(-2);
            arity_t arity = -4;
            TS_ASSERT(arg.is_idx_valid(arity));
        }
    }
    void test_ph2l() {
        vector<string> labels{"fat", "pretty"};
        TS_ASSERT_EQUALS(ph2l("and($1 $2)", labels), "and($fat $pretty)");
    }
    void test_l2ph() {
        vector<string> labels{"fat", "pretty"};
        TS_ASSERT_EQUALS(l2ph("and($fat $pretty)", labels), "and($1 $2)");
    }
    void test_hash_value() {
        vertex v_db(4.2);
        size_t hv_bd = hash_value(v_db);
        vertex v_bl(id::logical_true);
        size_t hv_bl = hash_value(v_bl);
        vertex v_do("definite_object");
        size_t hv_do = hash_value(v_do);
        TS_ASSERT_DIFFERS(hv_bd, hv_bl);
        TS_ASSERT_DIFFERS(hv_bd, hv_do);
        TS_ASSERT_DIFFERS(hv_bl, hv_do);
    }
};
